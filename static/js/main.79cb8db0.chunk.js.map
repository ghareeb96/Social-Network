{"version":3,"sources":["firebase.js","components/reg-log/Logo.png","components/reg-log/reg-log.jsx","components/post/Posts.jsx","components/Home/Home.jsx","components/users/users.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseDB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","gsap","registerPlugin","TweenLite","RegLog","props","useState","toggler","setToggler","useEffect","to","ease","css","opacity","translateY","loggedUser","className","htmlFor","onChange","e","setName","target","value","type","id","name","required","setEmail","email","emailError","setPassword","password","passwordError","onClick","preventDefault","handleSignUp","clearErrors","clearInput","handleLogin","src","logo","alt","Posts","posts","setPosts","newText","setNewText","modal","setModal","firstRender","setFirstRender","newPosts","Object","entries","key","post","body","date","push","reverse","length","fromTo","x","duration","yoyo","stagger","selector","document","querySelectorAll","from","scale","map","item","classList","contains","cols","rows","defaultValue","editPost","image","viewIcons","deletePost","Home","gotUser","setGotUser","querySelector","window","addEventListener","offsetHeight","offsetTop","scrollY","outerHeight","users","isFirstLogin","database","child","initUser","setFirstLogin","setCurrentUser","setUserKey","curUser","currentUser","profilePic","handleLogout","filter","pathname","state","mainUser","Users","user","setUser","setUsers","goHome","setGoHome","location","match","params","App","ref","storage","setImage","setInitUser","setloggedUser","userKey","setEmailError","setPasswordError","postText","setPostText","auth","signOut","on","snapshot","val","onAuthStateChanged","put","error","console","log","getDownloadURL","then","url","set","exact","path","addPost","trim","Date","toLocaleString","hour","minute","weekday","day","month","year","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79cb8db0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAltR2gyRBkILBgMEQVa3QT6LI9bUjxUCU\",\r\n    authDomain: \"react-social-network-4762c.firebaseapp.com\",\r\n    databaseURL: \"https://react-social-network-4762c-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-social-network-4762c\",\r\n    storageBucket: \"react-social-network-4762c.appspot.com\",\r\n    messagingSenderId: \"604842802759\",\r\n    appId: \"1:604842802759:web:de11221667256e472bbb62\"\r\n};\r\n\r\nlet firebaseDB = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseDB;","export default __webpack_public_path__ + \"static/media/Logo.db1942f3.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { gsap, TweenLite } from \"gsap\";\r\nimport \"./reg-log.scss\";\r\nimport logo from \"./Logo.png\";\r\n\r\ngsap.registerPlugin(TweenLite)\r\n\r\nconst RegLog = (props) => {\r\n\r\n    // const tl = new TweenLite();\r\n    const [toggler, setToggler] = useState(\"container\");\r\n\r\n    useEffect(() => {\r\n\r\n        gsap.to(\".container\", 0.7, {\r\n            // y: 0,\r\n            ease: \"easeInOut\",\r\n            css: {\r\n                opacity: 1,\r\n                translateY: \"0\"\r\n            }\r\n        })\r\n        // tl.to(\".container\", { css: { opacity: \"1\", translateY: \"0\" } }, 0.4)\r\n    })\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <Redirect to=\"/Home\"></Redirect>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"reg-log\">\r\n                {/* <div className=\"sign-up\">\r\n                    <div className=\"form-section\">\r\n                        <div className=\"form-header\">\r\n                            <img src={logo} alt=\"Logo\" className=\"logo\" />\r\n                            <h3 className=\"fakeboss\">Fakeboss</h3>\r\n                        </div>\r\n\r\n                        <div className=\"form-inputs\">\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"name-input\">Full Name</label>\r\n                                <input\r\n                                    onChange={(e) => props.setName(e.target.value)}\r\n                                    type=\"text\"\r\n                                    id=\"name-input\"\r\n                                    value={props.name}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"email-input\">E-Mail</label>\r\n                                <input\r\n                                    onChange={(e) => props.setEmail(e.target.value)}\r\n                                    type=\"email\"\r\n                                    id=\"email-input\"\r\n                                    value={props.email}\r\n                                    required\r\n                                />\r\n                                <p className=\"error\">{props.emailError}</p>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"password-input\">Password</label>\r\n                                <input\r\n                                    onChange={(e) => props.setPassword(e.target.value)}\r\n                                    type=\"password\"\r\n                                    id=\"password-input\"\r\n                                    required\r\n                                    value={props.password}\r\n                                />\r\n                                <p className=\"error\">{props.passwordError}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-btn\">\r\n                            <button className=\"submit\">Sign Up</button>\r\n                            <div className=\"instead\">\r\n                                <p>Already have an Account ?</p>\r\n                                <a href=\"#\">Sign in</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"hero-section\">\r\n\r\n                        <div className=\"illustration\"></div>\r\n                        <div className=\"slogan\"></div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"login\"></div> */}\r\n\r\n\r\n                <div className={toggler}>\r\n                    <div className=\"form-container sign-up-container\">\r\n                        <div className=\"form-header\">\r\n                            <h2>Create New Account</h2>\r\n                        </div>\r\n\r\n                        <div className=\"form-section\">\r\n                            <div className=\"form-inputs\">\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"name-input\">Full Name</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        id=\"name-input\"\r\n                                        value={props.name}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"email-input\">E-Mail</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        id=\"email-input\"\r\n                                        value={props.email}\r\n                                        required\r\n                                    />\r\n                                    <p className=\"error\">{props.emailError}</p>\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"password-input\">Password</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password-input\"\r\n                                        required\r\n                                        value={props.password}\r\n                                    />\r\n                                    <p className=\"error\">{props.passwordError}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-btn\">\r\n                                <button className=\"submit\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    props.handleSignUp();\r\n                                }}>Sign Up</button>\r\n                                <div className=\"instead\">\r\n                                    <p>Already have an Account ?</p>\r\n                                    <a onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container\")\r\n                                    }}>Sign in</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-container sign-in-container\">\r\n                        <div className=\"form-header\">\r\n                            <h2>Sign In</h2>\r\n                        </div>\r\n                        <div className=\"form-section\">\r\n\r\n                            <div className=\"form-inputs\">\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"email-sign-in\">E-Mail</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        id=\"email-sign-in\"\r\n                                        value={props.email}\r\n                                        required\r\n                                    />\r\n                                    <p className=\"error\">{props.emailError}</p>\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"password-sign-in\">Password</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password-sign-in\"\r\n                                        required\r\n                                        value={props.password}\r\n                                    />\r\n                                    <p className=\"error\">{props.passwordError}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-btn\">\r\n                                <button className=\"submit\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    props.handleLogin();\r\n                                }}>Sign In</button>\r\n                                <div className=\"instead\">\r\n                                    <p>Don't have Account ?</p>\r\n                                    <a onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container right-panel-active\")\r\n                                    }}>Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"overlay-container\">\r\n                        <div className=\"overlay\">\r\n                            <div className=\"overlay-panel overlay-left\">\r\n                                <img src={logo} alt=\"Logo\" />\r\n                                <h3>Fakeboss</h3>\r\n                            </div>\r\n                            <div className=\"overlay-panel overlay-right\">\r\n                                <img src={logo} alt=\"Logo\" />\r\n                                <h3>Fakeboss</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegLog;","import React, { useState, useEffect } from 'react'\r\nimport \"./posts.scss\"\r\nimport { gsap, TweenLite } from \"gsap\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    const [posts, setPosts] = useState([])\r\n    const [newText, setNewText] = useState(\"\")\r\n    const [modal, setModal] = useState(false)\r\n    const [firstRender, setFirstRender] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (props.posts) {\r\n            let newPosts = []\r\n            for (const [key, value] of Object.entries(props.posts)) {\r\n                let post = {\r\n                    id: key,\r\n                    body: value.body,\r\n                    date: value.date\r\n                }\r\n                newPosts.push(post)\r\n            }\r\n            newPosts.reverse();\r\n            setPosts(newPosts)\r\n        } else {\r\n            setPosts([])\r\n        }\r\n\r\n    }, [props.posts])\r\n\r\n    useEffect(() => {\r\n        if (posts.length !== 0 && firstRender) {\r\n            TweenLite.fromTo(\".post-container\",\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n            setFirstRender(false)\r\n        } else if (posts.length !== 0 && !firstRender) {\r\n            let selector = document.querySelectorAll(\".post-container\")[0];\r\n            TweenLite.fromTo(selector,\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n        }\r\n\r\n    }, [posts])\r\n\r\n    useEffect(() => {\r\n\r\n        if (modal) {\r\n\r\n            TweenLite.from(\".modal\", 0.3, {\r\n                scale: 0\r\n            })\r\n        }\r\n\r\n    }, [modal])\r\n\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n\r\n            {posts ?\r\n                (\r\n                    posts.map(item => (\r\n                        <>\r\n                            <div className={modal ? \"modal-container open\" : \"modal-container\"}\r\n\r\n                                onClick={(e) => {\r\n                                    if (e.target.classList.contains(\"modal-container\")) {\r\n                                        setModal(false)\r\n                                    }\r\n                                }}>\r\n\r\n                                <div className=\"modal\">\r\n                                    <div className=\"text\">\r\n                                        <textarea onChange={(e) => setNewText(e.target.value)} cols=\"30\" rows=\"10\" defaultValue={item.body}></textarea>\r\n                                    </div>\r\n                                    <div className=\"btns\">\r\n                                        <button onClick={() => {\r\n                                            props.editPost(item.id, newText)\r\n                                            setModal(false)\r\n                                            setNewText(\"\")\r\n                                        }}>Done</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div\r\n                                className=\"post-container\"\r\n                                key={item.id}\r\n                            >\r\n                                <div className=\"post-image\">\r\n                                    <div className=\"image\">\r\n                                        <img src={props.image} alt=\"Picture\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post\">\r\n                                    <div className=\"post-body\">\r\n                                        <p>{item.body}</p>\r\n                                    </div>\r\n                                    <div className=\"post-footer\">\r\n                                        <div className=\"post-time\"> <p> {item.date}</p></div>\r\n                                        {\r\n                                            props.viewIcons ?\r\n                                                (<div className=\"post-btns\">\r\n\r\n                                                    <button\r\n                                                        className=\"Edit\"\r\n                                                        onClick={() => {\r\n                                                            setModal(true)\r\n                                                        }}\r\n                                                    ><i className=\"far fa-edit\"></i></button>\r\n                                                    <button\r\n                                                        className=\"delete\"\r\n                                                        onClick={() => {\r\n                                                            props.deletePost(item.id)\r\n                                                        }\r\n                                                        }\r\n                                                    ><i className=\"far fa-trash-alt\"></i></button>\r\n\r\n                                                </div>)\r\n                                                :\r\n                                                \"\"\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n\r\n                    ))\r\n                )\r\n                :\r\n                (\r\n                    <> </>\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Posts from '../post/Posts'\r\nimport \"./Home.scss\"\r\n\r\nconst Home = (props) => {\r\n    const [gotUser, setGotUser] = useState(false);\r\n\r\n    const editPost = (postId, newPost) => {\r\n        if (newPost.trim()) {\r\n            props.database.child(`users/${props.userKey}/posts/${postId}`).update({\r\n                body: newPost\r\n            })\r\n        } else {\r\n            alert(\"Please, either edit the Post, or delete it .\")\r\n        }\r\n    }\r\n\r\n    const deletePost = (e) => {\r\n        if (window.confirm(\"Are you sure you want to delete this post ?\")) {\r\n            props.database.child(`users/${props.userKey}/posts/${e}`)\r\n                .remove(\r\n                    err => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                        }\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    const saveUser = () => {\r\n        props.database.child(\"users\").push(props.initUser);\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        if (e.target.files[0]) {\r\n            props.setImage(e.target.files[0])\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (document.querySelector(\".users\") && document.querySelector(\".main\")) {\r\n            window.addEventListener(\"scroll\", () => {\r\n                let sidebarHeight = document.querySelector(\".users-container\").offsetHeight + document.querySelector(\".users-container\").offsetTop + document.querySelector(\".main\").offsetTop;\r\n                // console.log(sidebarHeight)\r\n                // console.log(window.scrollY + window.outerHeight)\r\n                // console.log(document.querySelector(\".users-container\").offsetTop)\r\n                // console.log(document.querySelector(\".users-container\").offsetHeight)\r\n                // console.log(document.querySelector(\".main\").offsetTop)\r\n\r\n                if (sidebarHeight <= window.scrollY + window.outerHeight) {\r\n                    document.querySelector(\".users\").className = \"users fixed\"\r\n                } else {\r\n                    document.querySelector(\".users\").className = \"users\"\r\n                }\r\n            })\r\n        }\r\n    }, [props.users])\r\n    useEffect(() => {\r\n        if (props.isFirstLogin) {\r\n            saveUser();\r\n            props.setFirstLogin(false);\r\n        }\r\n\r\n        if (!gotUser && !props.isFirstLogin) {\r\n            const curUser = () => {\r\n                if (props.users) {\r\n                    for (const [key, value] of Object.entries(props.users)) {\r\n                        if (value.email === props.loggedUser.email) {\r\n                            props.setCurrentUser(value)\r\n                            props.setUserKey(key)\r\n                            setGotUser(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            curUser();\r\n        }\r\n\r\n\r\n    }, [props])\r\n\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <div className=\"home\">\r\n                {props.currentUser ?\r\n                    (<>\r\n                        <div className=\"header\">\r\n                            <div className=\"image-container\">\r\n                                <div className=\"image\">\r\n                                    <img src={props.currentUser.profilePic} alt=\"PP\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                <h1>{props.currentUser.name}</h1>\r\n                                {/* <div className=\"file-input\">\r\n                                    <input type=\"file\" id=\"myfile\" accept=\"image/*\" className=\"myfile\" onChange={handleUpload} />\r\n                                    <label htmlFor=\"myfile\"> <i className=\"fas fa-image\"></i> Change Profile Picture</label>\r\n                                </div> */}\r\n                            </div>\r\n                            {/* <div className=\"btn\">\r\n                                <button onClick={props.handleLogout} className=\"logout\">Sign-Out <i className=\"fas fa-sign-out-alt\"></i>\r\n\r\n                                </button>\r\n                            </div> */}\r\n                        </div>\r\n\r\n                        <div className=\"main\">\r\n\r\n                            <div className=\"tabs\">\r\n                                <ul className=\"tab-links\">\r\n                                    <li className=\"link active-link\">\r\n                                        <Link to={\"/Home\"}>\r\n                                            <i className=\"fas fa-home\"></i> Home\r\n                                                    </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"link\">\r\n                                        <Link to={\"/Profile\"}>\r\n                                            <i className=\"fas fa-user\"></i> Profile\r\n                                                    </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"link\">\r\n                                        <Link to={\"/Notifications\"}>\r\n                                            <i className=\"fas fa-bell\"></i> Notifications\r\n                                                    </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"link\">\r\n                                        <Link to={\"/Messages\"}>\r\n                                            <i className=\"fas fa-envelope\"></i> Messages\r\n                                                    </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"link\">\r\n                                        <Link to={\"/Settings\"}>\r\n                                            <i className=\"fas fa-cogs\"></i> Settings\r\n                                                    </Link>\r\n                                    </li>\r\n\r\n                                    <li className=\"link\">\r\n                                        <button onClick={() => {\r\n                                            props.handleLogout()\r\n                                        }}>\r\n                                            <i className=\"fas fa-sign-out-alt\"></i> Sign Out\r\n                                                    </button>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"timeline\"></div>\r\n\r\n                            <div className=\"users\">\r\n\r\n                                <div className=\"headline\">\r\n                                    <h3>People you may know</h3>\r\n                                </div>\r\n                                <div className=\"users-container\">\r\n\r\n                                    {props.users ?\r\n                                        Object.entries(props.users)\r\n                                            .filter((item) => item[1].email !== props.currentUser.email)\r\n                                            .map((item) =>\r\n                                                <div className=\"user\">\r\n                                                    <div className=\"image\">\r\n                                                        <img src={item[1].profilePic} alt=\"PP\" />\r\n                                                    </div>\r\n                                                    <div className=\"userName\">\r\n                                                        <Link to={{\r\n                                                            pathname: `/users/${item[0]}`,\r\n                                                            state: {\r\n                                                                users: props.users,\r\n                                                                mainUser: props.currentUser\r\n                                                            }\r\n                                                        }}\r\n                                                            key={item[0]}>\r\n                                                            {item[1].name}\r\n                                                        </Link>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            {/* <div className=\"timeline\">\r\n                                <div className=\"post-input\">\r\n\r\n                                    <div className=\"post-text\">\r\n                                        <textarea\r\n                                            placeholder=\"Post something Useful\"\r\n                                            cols=\"50\"\r\n                                            rows=\"6\"\r\n                                            name=\"newPost\"\r\n                                            value={props.postText}\r\n                                            onChange={(e) => props.setPostText(e.target.value)} />\r\n\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        className=\"add\"\r\n                                        onClick={() => { props.addPost() }}\r\n                                    >\r\n                                        Post</button>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"posts-container\">\r\n\r\n                                    <Posts\r\n                                        posts={props.currentUser.posts}\r\n                                        deletePost={deletePost}\r\n                                        editPost={editPost}\r\n                                        image={props.currentUser.profilePic}\r\n                                        viewIcons={true}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div> */}\r\n\r\n\r\n                        </div>\r\n                    </>\r\n                    )\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <Redirect to=\"/Social-Network/\"></Redirect>\r\n        )\r\n    }\r\n}\r\nexport default Home;\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Posts from '../post/Posts'\r\nimport \"./users.scss\"\r\n\r\nconst Users = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [users, setUsers] = useState(null)\r\n    const [goHome, setGoHome] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setUsers(props.location.state.users)\r\n\r\n        Object.entries(props.location.state.users)\r\n            .map((item) => {\r\n                if (item[0] === props.match.params.id) {\r\n                    setUser(item[1])\r\n                }\r\n            })\r\n\r\n    })\r\n\r\n\r\n    if (user) {\r\n        return (\r\n            <div className=\"user\">\r\n\r\n                <div className=\"header\">\r\n                    <div className=\"image-container\">\r\n                        <div className=\"image\">\r\n                            <img src={user.profilePic} alt=\"PP\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        <h1>{user.name}</h1>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <button onClick={() => {\r\n                            setGoHome(true)\r\n                            setUser(null)\r\n                        }}>Home <i className=\"fas fa-home\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"timeline\">\r\n                        <div className=\"posts-container\">\r\n                            <Posts\r\n                                posts={user.posts}\r\n                                image={user.profilePic}\r\n                                viewIcons={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        if (goHome) {\r\n            return (\r\n                <Redirect to=\"/Home\"></Redirect>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Users;\r\n\r\n","import React, { useEffect, useState } from 'react'\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport firebaseDB from \"./firebase\";\nimport RegLog from \"./components/reg-log/reg-log\";\nimport Home from \"./components/Home/Home\";\nimport Users from \"./components/users/users\";\n\nfunction App() {\n  const database = firebaseDB.database().ref();\n  const storage = firebaseDB.storage();\n\n  const [image, setImage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [initUser, setInitUser] = useState({})\n  const [loggedUser, setloggedUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [userKey, setUserKey] = useState(\"\");\n  const [isFirstLogin, setFirstLogin] = useState(false)\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [postText, setPostText] = useState(\"\");\n\n\n  const addPost = () => {\n    if (postText.trim() !== \"\") {\n      const date = new Date();\n\n      database.child(`users/${userKey}/posts`).push(\n        {\n          body: postText,\n          date: date.toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            weekday: \"short\",\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\"\n          })\n        }\n      )\n      setPostText(\"\")\n\n    }\n  }\n  const authListener = () => {\n    firebaseDB.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInput();\n        setloggedUser(user);\n      } else {\n        setloggedUser(\"\");\n      }\n    })\n  }\n  const handleLogout = () => {\n    firebaseDB.auth().signOut();\n    setloggedUser(\"\")\n  }\n  const clearInput = () => {\n    setName(\"\")\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  }\n  const handleSignUp = () => {\n    clearErrors();\n    setFirstLogin(true)\n    setInitUser({\n      name: name,\n      email: email,\n      profilePic: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n      posts: {}\n    })\n\n    firebaseDB.auth().createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n  }\n  const handleLogin = () => {\n    clearErrors();\n    setFirstLogin(false)\n    firebaseDB.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n\n\n\n  }\n  window.addEventListener('beforeunload', (e) => {\n    e.preventDefault();\n    handleLogout();\n  });\n\n  useEffect(() => {\n    database.child(\"users\").on(\"value\", (snapshot) => {\n      if (snapshot.val() !== null) {\n        setUsers(snapshot.val())\n      }\n    })\n    authListener();\n\n  }, [])\n\n  useEffect(() => {\n    if (image !== null) {\n\n      const upload = () => {\n        const uploadTask = storage.ref(`images/${loggedUser.email}`).put(image)\n        uploadTask.on(\"state_changed\",\n          snapshot => { },\n          error => console.log(error),\n          () => {\n            storage\n              .ref(\"images\")\n              .child(loggedUser.email)\n              .getDownloadURL()\n              .then(url => {\n                database.child(`users/${userKey}/profilePic`).set(url)\n              })\n          }\n\n        )\n      }\n      upload();\n    }\n  }, [image])\n\n  useEffect(() => {\n    if (loggedUser) {\n      database.child(`users/${userKey}`).on(\"value\", (snapshot) => {\n        setCurrentUser(snapshot.val())\n      })\n    } else {\n      setCurrentUser(\"\")\n      setUserKey(\"\")\n    }\n\n  }, [loggedUser])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/Home\">\n            <Home\n              initUser={initUser}\n              setFirstLogin={setFirstLogin}\n              database={database}\n              isFirstLogin={isFirstLogin}\n              handleLogout={handleLogout}\n              users={users}\n              loggedUser={loggedUser}\n              setUserKey={setUserKey}\n              userKey={userKey}\n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              addPost={addPost}\n              postText={postText}\n              setPostText={setPostText}\n              setImage={setImage}\n            />\n          </Route>\n          <Route exact path=\"/Social-Network/\">\n            <RegLog\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              loggedUser={loggedUser}\n              password={password}\n              setPassword={setPassword}\n              handleLogin={handleLogin}\n              handleSignUp={handleSignUp}\n              emailError={emailError}\n              passwordError={passwordError}\n              clearErrors={clearErrors}\n              clearInput={clearInput}\n            />\n          </Route>\n          <Route exact path=\"/users/:id\" component={Users} users={users} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}