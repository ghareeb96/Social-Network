[{"J:\\Projects\\React Projects\\social-network\\src\\index.js":"1","J:\\Projects\\React Projects\\social-network\\src\\App.js":"2","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js":"3","J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx":"4","J:\\Projects\\React Projects\\social-network\\src\\firebase.js":"5","J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx":"6","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx":"7","J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":5720,"mtime":1614046565863,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":10246,"mtime":1613950534310,"results":"13","hashOfConfig":"10"},{"size":561,"mtime":1610613467249,"results":"14","hashOfConfig":"10"},{"size":9565,"mtime":1614053524531,"results":"15","hashOfConfig":"10"},{"size":6149,"mtime":1613491481480,"results":"16","hashOfConfig":"10"},{"size":2212,"mtime":1612752690281,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tg3bt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"J:\\Projects\\React Projects\\social-network\\src\\index.js",[],["38","39"],"J:\\Projects\\React Projects\\social-network\\src\\App.js",["40","41","42","43","44","45"],"J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx",["46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { gsap, TweenLite } from \"gsap\";\r\nimport \"./reg-log.scss\";\r\nimport logo from \"./Logo.png\";\r\n\r\ngsap.registerPlugin(TweenLite)\r\n\r\nconst RegLog = (props) => {\r\n\r\n    // const tl = new TweenLite();\r\n    const [toggler, setToggler] = useState(\"container\");\r\n\r\n    useEffect(() => {\r\n\r\n        gsap.to(\".container\", 0.7, {\r\n            // y: 0,\r\n            ease: \"easeInOut\",\r\n            css: {\r\n                opacity: 1,\r\n                translateY: \"0\"\r\n            }\r\n        })\r\n        // tl.to(\".container\", { css: { opacity: \"1\", translateY: \"0\" } }, 0.4)\r\n    })\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <Redirect to=\"/Home\"></Redirect>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"reg-log\">\r\n                {/* <div className=\"sign-up\">\r\n                    <div className=\"form-section\">\r\n                        <div className=\"form-header\">\r\n                            <img src={logo} alt=\"Logo\" className=\"logo\" />\r\n                            <h3 className=\"fakeboss\">Fakeboss</h3>\r\n                        </div>\r\n\r\n                        <div className=\"form-inputs\">\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"name-input\">Full Name</label>\r\n                                <input\r\n                                    onChange={(e) => props.setName(e.target.value)}\r\n                                    type=\"text\"\r\n                                    id=\"name-input\"\r\n                                    value={props.name}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"email-input\">E-Mail</label>\r\n                                <input\r\n                                    onChange={(e) => props.setEmail(e.target.value)}\r\n                                    type=\"email\"\r\n                                    id=\"email-input\"\r\n                                    value={props.email}\r\n                                    required\r\n                                />\r\n                                <p className=\"error\">{props.emailError}</p>\r\n                            </div>\r\n                            <div className=\"form-input\">\r\n                                <label htmlFor=\"password-input\">Password</label>\r\n                                <input\r\n                                    onChange={(e) => props.setPassword(e.target.value)}\r\n                                    type=\"password\"\r\n                                    id=\"password-input\"\r\n                                    required\r\n                                    value={props.password}\r\n                                />\r\n                                <p className=\"error\">{props.passwordError}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-btn\">\r\n                            <button className=\"submit\">Sign Up</button>\r\n                            <div className=\"instead\">\r\n                                <p>Already have an Account ?</p>\r\n                                <a href=\"#\">Sign in</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"hero-section\">\r\n\r\n                        <div className=\"illustration\"></div>\r\n                        <div className=\"slogan\"></div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"login\"></div> */}\r\n\r\n\r\n                <div className={toggler}>\r\n                    <div className=\"form-container sign-up-container\">\r\n                        <div className=\"form-header\">\r\n                            <h2>Create New Account</h2>\r\n                        </div>\r\n\r\n                        <div className=\"form-section\">\r\n                            <div className=\"form-inputs\">\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"name-input\">Full Name</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        id=\"name-input\"\r\n                                        value={props.name}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"email-input\">E-Mail</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        id=\"email-input\"\r\n                                        value={props.email}\r\n                                        required\r\n                                    />\r\n                                    <p className=\"error\">{props.emailError}</p>\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"password-input\">Password</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password-input\"\r\n                                        required\r\n                                        value={props.password}\r\n                                    />\r\n                                    <p className=\"error\">{props.passwordError}</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-btn\">\r\n                                <button className=\"submit\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    props.handleSignUp();\r\n                                }}>Sign Up</button>\r\n                                <div className=\"instead\">\r\n                                    <p>Already have an Account ?</p>\r\n                                    <a onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container\")\r\n                                    }}>Sign in</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-container sign-in-container\">\r\n                        <div className=\"form-header\">\r\n                            <h2>Sign In</h2>\r\n                        </div>\r\n                        <div className=\"form-section\">\r\n\r\n                            <div className=\"form-inputs\">\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"email-input\">E-Mail</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setEmail(e.target.value)}\r\n                                        type=\"email\"\r\n                                        id=\"email-input\"\r\n                                        value={props.email}\r\n                                        required\r\n                                    />\r\n                                    <p className=\"error\">{props.emailError}</p>\r\n                                </div>\r\n                                <div className=\"form-input\">\r\n                                    <label htmlFor=\"password-input\">Password</label>\r\n                                    <input\r\n                                        onChange={(e) => props.setPassword(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password-input\"\r\n                                        required\r\n                                        value={props.password}\r\n                                    />\r\n                                    <p className=\"error\">{props.passwordError}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-btn\">\r\n                                <button className=\"submit\" onClick={(e) => {\r\n                                    e.preventDefault();\r\n                                    props.handleLogin();\r\n                                }}>Sign In</button>\r\n                                <div className=\"instead\">\r\n                                    <p>Don't have Account ?</p>\r\n                                    <a onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container right-panel-active\")\r\n                                    }}>Sign Up</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"overlay-container\">\r\n                        <div className=\"overlay\">\r\n                            <div className=\"overlay-panel overlay-left\">\r\n                                <img src={logo} alt=\"Logo\" />\r\n                                <h3>Fakeboss</h3>\r\n                            </div>\r\n                            <div className=\"overlay-panel overlay-right\">\r\n                                <img src={logo} alt=\"Logo\" />\r\n                                <h3>Fakeboss</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegLog;","J:\\Projects\\React Projects\\social-network\\src\\firebase.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx",["48","49","50","51","52","53"],"J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx",["54","55","56"],"import React, { useState, useEffect } from 'react'\r\nimport \"./posts.scss\"\r\nimport { gsap, TweenLite } from \"gsap\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    const [posts, setPosts] = useState([])\r\n    const [newText, setNewText] = useState(\"\")\r\n    const [modal, setModal] = useState(false)\r\n    const [firstRender, setFirstRender] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (props.posts) {\r\n            let newPosts = []\r\n            for (const [key, value] of Object.entries(props.posts)) {\r\n                let post = {\r\n                    id: key,\r\n                    body: value.body,\r\n                    date: value.date\r\n                }\r\n                newPosts.push(post)\r\n            }\r\n            newPosts.reverse();\r\n            setPosts(newPosts)\r\n        } else {\r\n            setPosts([])\r\n        }\r\n\r\n    }, [props.posts])\r\n\r\n    useEffect(() => {\r\n        if (posts.length !== 0 && firstRender) {\r\n            TweenLite.fromTo(\".post-container\",\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n            setFirstRender(false)\r\n        } else if (posts.length !== 0 && !firstRender) {\r\n            let selector = document.querySelectorAll(\".post-container\")[0];\r\n            TweenLite.fromTo(selector,\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n        }\r\n\r\n    }, [posts])\r\n\r\n    useEffect(() => {\r\n\r\n        if (modal) {\r\n\r\n            TweenLite.from(\".modal\", 0.3, {\r\n                scale: 0\r\n            })\r\n        }\r\n\r\n    }, [modal])\r\n\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n\r\n            {posts ?\r\n                (\r\n                    posts.map(item => (\r\n                        <>\r\n                            <div className={modal ? \"modal-container open\" : \"modal-container\"}\r\n\r\n                                onClick={(e) => {\r\n                                    if (e.target.classList.contains(\"modal-container\")) {\r\n                                        setModal(false)\r\n                                    }\r\n                                }}>\r\n\r\n                                <div className=\"modal\">\r\n                                    <div className=\"text\">\r\n                                        <textarea onChange={(e) => setNewText(e.target.value)} cols=\"30\" rows=\"10\" defaultValue={item.body}></textarea>\r\n                                    </div>\r\n                                    <div className=\"btns\">\r\n                                        <button onClick={() => {\r\n                                            props.editPost(item.id, newText)\r\n                                            setModal(false)\r\n                                            setNewText(\"\")\r\n                                        }}>Done</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div\r\n                                className=\"post-container\"\r\n                                key={item.id}\r\n                            >\r\n                                <div className=\"post-image\">\r\n                                    <div className=\"image\">\r\n                                        <img src={props.image} alt=\"Picture\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post\">\r\n                                    <div className=\"post-body\">\r\n                                        <p>{item.body}</p>\r\n                                    </div>\r\n                                    <div className=\"post-footer\">\r\n                                        <div className=\"post-time\"> <p> {item.date}</p></div>\r\n                                        {\r\n                                            props.viewIcons ?\r\n                                                (<div className=\"post-btns\">\r\n\r\n                                                    <button\r\n                                                        className=\"Edit\"\r\n                                                        onClick={() => {\r\n                                                            setModal(true)\r\n                                                        }}\r\n                                                    ><i className=\"far fa-edit\"></i></button>\r\n                                                    <button\r\n                                                        className=\"delete\"\r\n                                                        onClick={() => {\r\n                                                            props.deletePost(item.id)\r\n                                                        }\r\n                                                        }\r\n                                                    ><i className=\"far fa-trash-alt\"></i></button>\r\n\r\n                                                </div>)\r\n                                                :\r\n                                                \"\"\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n\r\n                    ))\r\n                )\r\n                :\r\n                (\r\n                    <> </>\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Posts;","J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx",["57","58","59","60"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Posts from '../post/Posts'\r\nimport \"./users.scss\"\r\n\r\nconst Users = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [users, setUsers] = useState(null)\r\n    const [goHome, setGoHome] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setUsers(props.location.state.users)\r\n\r\n        Object.entries(props.location.state.users)\r\n            .map((item) => {\r\n                if (item[0] === props.match.params.id) {\r\n                    setUser(item[1])\r\n                }\r\n            })\r\n\r\n    })\r\n\r\n\r\n    if (user) {\r\n        return (\r\n            <div className=\"user\">\r\n\r\n                <div className=\"header\">\r\n                    <div className=\"image-container\">\r\n                        <div className=\"image\">\r\n                            <img src={user.profilePic} alt=\"PP\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        <h1>{user.name}</h1>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <button onClick={() => {\r\n                            setGoHome(true)\r\n                            setUser(null)\r\n                        }}>Home <i className=\"fas fa-home\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"timeline\">\r\n                        <div className=\"posts-container\">\r\n                            <Posts\r\n                                posts={user.posts}\r\n                                image={user.profilePic}\r\n                                viewIcons={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        if (goHome) {\r\n            return (\r\n                <Redirect to=\"/Home\"></Redirect>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Users;\r\n\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":7,"column":3,"nodeType":"67","messageId":"68","endLine":7,"endColumn":11},{"ruleId":"69","severity":1,"message":"70","line":89,"column":9,"nodeType":"71","messageId":"72","endLine":97,"endColumn":10},{"ruleId":"69","severity":1,"message":"70","line":106,"column":9,"nodeType":"71","messageId":"72","endLine":115,"endColumn":10},{"ruleId":"73","severity":1,"message":"74","line":135,"column":6,"nodeType":"75","endLine":135,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":159,"column":6,"nodeType":"75","endLine":159,"endColumn":13,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"79","line":171,"column":6,"nodeType":"75","endLine":171,"endColumn":18,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":146,"column":37,"nodeType":"83","endLine":150,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":193,"column":37,"nodeType":"83","endLine":197,"endColumn":40},{"ruleId":"65","severity":1,"message":"84","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":13},{"ruleId":"65","severity":1,"message":"85","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":10},{"ruleId":"65","severity":1,"message":"86","line":13,"column":11,"nodeType":"67","messageId":"68","endLine":13,"endColumn":19},{"ruleId":"65","severity":1,"message":"87","line":23,"column":11,"nodeType":"67","messageId":"68","endLine":23,"endColumn":21},{"ruleId":"65","severity":1,"message":"88","line":40,"column":11,"nodeType":"67","messageId":"68","endLine":40,"endColumn":23},{"ruleId":"73","severity":1,"message":"89","line":69,"column":8,"nodeType":"75","endLine":69,"endColumn":15,"suggestions":"90"},{"ruleId":"65","severity":1,"message":"91","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"73","severity":1,"message":"92","line":72,"column":8,"nodeType":"75","endLine":72,"endColumn":15,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":122,"column":41,"nodeType":"83","endLine":122,"endColumn":80},{"ruleId":"65","severity":1,"message":"96","line":4,"column":5,"nodeType":"67","messageId":"68","endLine":4,"endColumn":9},{"ruleId":"65","severity":1,"message":"97","line":11,"column":12,"nodeType":"67","messageId":"68","endLine":11,"endColumn":17},{"ruleId":"73","severity":1,"message":"98","line":16,"column":5,"nodeType":"67","endLine":16,"endColumn":14,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":20,"column":25,"nodeType":"102","messageId":"103","endLine":20,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'database'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'database', 'loggedUser.email', 'storage', and 'userKey'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has missing dependencies: 'database' and 'userKey'. Either include them or remove the dependency array.",["108"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Posts' is defined but never used.","'bg' is defined but never used.","'editPost' is assigned a value but never used.","'deletePost' is assigned a value but never used.","'handleUpload' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gotUser' and 'saveUser'. Either include them or remove the dependency array.",["109"],"'gsap' is defined but never used.","React Hook useEffect has a missing dependency: 'firstRender'. Either include it or remove the dependency array.",["110"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Link' is defined but never used.","'users' is assigned a value but never used.","React Hook useEffect contains a call to 'setUsers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state.users, props.match.params.id] as a second argument to the useEffect Hook.",["111"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [authListener, database]",{"range":"124","text":"125"},"Update the dependencies array to be: [database, image, loggedUser.email, storage, userKey]",{"range":"126","text":"127"},"Update the dependencies array to be: [database, loggedUser, userKey]",{"range":"128","text":"129"},"Update the dependencies array to be: [gotUser, props, saveUser]",{"range":"130","text":"131"},"Update the dependencies array to be: [firstRender, posts]",{"range":"132","text":"133"},"Add dependencies array: [props.location.state.users, props.match.params.id]",{"range":"134","text":"135"},[3444,3446],"[authListener, database]",[4023,4030],"[database, image, loggedUser.email, storage, userKey]",[4263,4275],"[database, loggedUser, userKey]",[1935,1942],"[gotUser, props, saveUser]",[2071,2078],"[firstRender, posts]",[639,639],", [props.location.state.users, props.match.params.id]"]