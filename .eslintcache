[{"J:\\Projects\\React Projects\\social-network\\src\\index.js":"1","J:\\Projects\\React Projects\\social-network\\src\\App.js":"2","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js":"3","J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx":"4","J:\\Projects\\React Projects\\social-network\\src\\firebase.js":"5","J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx":"6","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":5529,"mtime":1611398218503,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4430,"mtime":1610621281075,"results":"12","hashOfConfig":"9"},{"size":561,"mtime":1610613467249,"results":"13","hashOfConfig":"9"},{"size":2926,"mtime":1611323068809,"results":"14","hashOfConfig":"9"},{"size":1634,"mtime":1611399080403,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tg3bt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"J:\\Projects\\React Projects\\social-network\\src\\index.js",[],["33","34"],"J:\\Projects\\React Projects\\social-network\\src\\App.js",["35","36","37","38"],"J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx",["39"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./reg-log.scss\";\r\n\r\n\r\nconst RegLog = (props) => {\r\n\r\n    const [toggler, setToggler] = useState(\"container\");\r\n\r\n    return (\r\n        <div className=\"reg-log\">\r\n            <div className={toggler}>\r\n                <div className=\"form-container sign-up-container\">\r\n                    <form>\r\n                        <h1>Create New Account</h1>\r\n                        <span>Use your E-mail for registration</span>\r\n                        <input\r\n                            onChange={(e) => props.setName(e.target.value)}\r\n                            type=\"text\"\r\n                            placeholder=\"Name\"\r\n                            value={props.name}\r\n                            required\r\n                        />\r\n                        <input\r\n                            onChange={(e) => props.setEmail(e.target.value)}\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={props.email}\r\n                            required\r\n                        />\r\n                        <p className=\"error\">{props.emailError}</p>\r\n                        <input\r\n                            onChange={(e) => props.setPassword(e.target.value)}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            value={props.password}\r\n                        />\r\n                        <p className=\"error\">{props.passwordError}</p>\r\n                        <button onClick={(e) => {\r\n                            e.preventDefault();\r\n                            props.handleSignUp()\r\n                        }}>Sign Up</button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"form-container sign-in-container\">\r\n                    <form>\r\n                        <h1>Sign In</h1>\r\n                        <span>Use your account</span>\r\n                        <input\r\n                            onChange={(e) => props.setEmail(e.target.value)}\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={props.email}\r\n                            required autoFocus\r\n                        />\r\n                        <p className=\"error\">{props.emailError}</p>\r\n                        <input\r\n                            onChange={(e) => props.setPassword(e.target.value)}\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            value={props.password}\r\n                        />\r\n                        <p className=\"error\">{props.passwordError}</p>\r\n                        <button onClick={(e) => {\r\n                            e.preventDefault()\r\n                            props.handleLogin()\r\n                        }}>Sign In</button>\r\n                    </form>\r\n\r\n                </div>\r\n                <div className=\"overlay-container\">\r\n                    <div className=\"overlay\">\r\n                        <div className=\"overlay-panel overlay-left\">\r\n                            <h1>Welcome back !</h1>\r\n                            <p>Please, Login to keep connected</p>\r\n                            <button\r\n                                onClick={() => {\r\n                                    props.clearErrors()\r\n                                    props.clearInput()\r\n                                    setToggler(\"container\")\r\n                                }}\r\n                                className=\"ghost\" id=\"signIn\">Sign In</button>\r\n                        </div>\r\n                        <div className=\"overlay-panel overlay-right\">\r\n                            <h1>Hello Friend !</h1>\r\n                            <p>Start the Journey with Us !</p>\r\n                            <button onClick={() => {\r\n                                props.clearErrors()\r\n                                props.clearInput()\r\n                                setToggler(\"container right-panel-active\")\r\n                            }} className=\"ghost\" id=\"signUp\">Sign Up</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default RegLog;\r\n\r\n\r\n","J:\\Projects\\React Projects\\social-network\\src\\firebase.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx",["40","41"],"import React, { useEffect, useState } from 'react'\r\nimport Posts from '../post/Posts'\r\nimport \"./Home.scss\"\r\n\r\nconst Home = (props) => {\r\n\r\n    const [gotUser, setGotUser] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n    const editPost = () => {\r\n\r\n    }\r\n    const deletePost = () => {\r\n\r\n    }\r\n    const saveUser = () => {\r\n        props.database.child(\"users\").push(props.initUser);\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.isFirstLogin) {\r\n            saveUser();\r\n            props.setFirstLogin(false);\r\n        }\r\n\r\n        if (!gotUser && !props.isFirstLogin) {\r\n            const curUser = () => {\r\n                if (props.users) {\r\n                    for (const [key, value] of Object.entries(props.users)) {\r\n                        if (value.email === props.loggedUser.email) {\r\n                            props.setCurrentUser(value)\r\n                            props.setUserKey(key)\r\n                            setGotUser(true);\r\n                            // console.log(value.email)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            curUser();\r\n        }\r\n\r\n\r\n    }, [props])\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"home\">\r\n\r\n            {props.currentUser ?\r\n\r\n                (<>\r\n                    <div className=\"header\">\r\n                        <h1>Welcome Back {props.currentUser.name}</h1>\r\n                        <button onClick={props.handleLogout}>Logout</button>\r\n                    </div>\r\n\r\n                    <div className=\"posts-container\">\r\n                        <div className=\"add-post\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"newPost\"\r\n                                value={props.postText}\r\n                                onChange={(e) => props.setPostText(e.target.value)} />\r\n\r\n                            <button\r\n                                className=\"add\"\r\n                                onClick={() => { props.addPost() }}\r\n                            >\r\n                                Post</button>\r\n                        </div>\r\n\r\n\r\n                        <Posts\r\n                            posts={props.currentUser.posts}\r\n                            deletePost={deletePost}\r\n                            editPost={editPost}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                    <div className=\"users\">\r\n                        {props.users ?\r\n\r\n                            Object.values(props.users).map(item =>\r\n                                <a href=\"#\" className=\"link\">{item.name}</a>\r\n                            )\r\n\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    </div>\r\n\r\n\r\n\r\n                </>\r\n                )\r\n                :\r\n                \"\"\r\n            }\r\n        </div >\r\n\r\n    )\r\n}\r\nexport default Home;\r\n\r\n","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":87,"column":9,"nodeType":"48","messageId":"49","endLine":95,"endColumn":10},{"ruleId":"46","severity":1,"message":"47","line":104,"column":9,"nodeType":"48","messageId":"49","endLine":113,"endColumn":10},{"ruleId":"50","severity":1,"message":"51","line":124,"column":6,"nodeType":"52","endLine":124,"endColumn":8,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":143,"column":6,"nodeType":"52","endLine":143,"endColumn":15,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"50","severity":1,"message":"60","line":48,"column":8,"nodeType":"52","endLine":48,"endColumn":15,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":90,"column":33,"nodeType":"64","endLine":90,"endColumn":62},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'database'. Either include them or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has missing dependencies: 'currentUser.email', 'currentUser.name', and 'database'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentUser' needs the current value of 'currentUser.name'.",["68"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'gotUser' and 'saveUser'. Either include them or remove the dependency array.",["69"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [authListener, database]",{"range":"76","text":"77"},"Update the dependencies array to be: [currentUser.email, currentUser.name, database, userKey]",{"range":"78","text":"79"},"Update the dependencies array to be: [gotUser, props, saveUser]",{"range":"80","text":"81"},[3380,3382],"[authListener, database]",[3875,3884],"[currentUser.email, currentUser.name, database, userKey]",[1136,1143],"[gotUser, props, saveUser]"]