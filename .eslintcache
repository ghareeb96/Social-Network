[{"J:\\Projects\\React Projects\\social-network\\src\\index.js":"1","J:\\Projects\\React Projects\\social-network\\src\\App.js":"2","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js":"3","J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx":"4","J:\\Projects\\React Projects\\social-network\\src\\firebase.js":"5","J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx":"6","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":5449,"mtime":1612403578034,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4977,"mtime":1612241240952,"results":"12","hashOfConfig":"9"},{"size":561,"mtime":1610613467249,"results":"13","hashOfConfig":"9"},{"size":4649,"mtime":1612404207514,"results":"14","hashOfConfig":"9"},{"size":2012,"mtime":1611584733786,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"tg3bt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"J:\\Projects\\React Projects\\social-network\\src\\index.js",[],["33","34"],"J:\\Projects\\React Projects\\social-network\\src\\App.js",["35","36","37","38","39","40"],"import React, { useEffect, useState } from 'react'\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport firebaseDB from \"./firebase\";\nimport RegLog from \"./components/reg-log/reg-log\";\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  const database = firebaseDB.database().ref();\n  const storage = firebaseDB.storage();\n\n  const [image, setImage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [initUser, setInitUser] = useState({})\n  const [loggedUser, setloggedUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [userKey, setUserKey] = useState(\"\");\n  const [isFirstLogin, setFirstLogin] = useState(false)\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [postText, setPostText] = useState(\"\");\n\n\n  const addPost = () => {\n    if (postText.trim() !== \"\") {\n      const date = new Date();\n\n      database.child(`users/${userKey}/posts`).push(\n        {\n          body: postText,\n          date: date.toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            weekday: \"short\",\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\"\n          })\n        }\n      )\n      setPostText(\"\")\n\n    }\n  }\n  const authListener = () => {\n    firebaseDB.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInput();\n        setloggedUser(user);\n      } else {\n        setloggedUser(\"\");\n      }\n    })\n  }\n  const handleLogout = () => {\n    firebaseDB.auth().signOut();\n    setloggedUser(\"\")\n  }\n  const clearInput = () => {\n    setName(\"\")\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  }\n  const handleSignUp = () => {\n    clearErrors();\n    setFirstLogin(true)\n    setInitUser({\n      name: name,\n      email: email,\n      profilePic: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n      posts: {}\n    })\n\n    firebaseDB.auth().createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n  }\n  const handleLogin = () => {\n    clearErrors();\n    setFirstLogin(false)\n    firebaseDB.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n  }\n\n  useEffect(() => {\n    database.child(\"users\").on(\"value\", (snapshot) => {\n      if (snapshot.val() !== null) {\n        setUsers(snapshot.val())\n      }\n    })\n    authListener();\n  }, [])\n\n  useEffect(() => {\n    if (image !== null) {\n\n      const upload = () => {\n        const uploadTask = storage.ref(`images/${loggedUser.email}`).put(image)\n        uploadTask.on(\"state_changed\",\n          snapshot => { },\n          error => console.log(error),\n          () => {\n            storage\n              .ref(\"images\")\n              .child(loggedUser.email)\n              .getDownloadURL()\n              .then(url => {\n                database.child(`users/${userKey}/profilePic`).set(url)\n              })\n          }\n\n        )\n      }\n      upload();\n    }\n  }, [image])\n\n  useEffect(() => {\n    if (userKey) {\n      database.child(`users/${userKey}`).on(\"value\", (snapshot) => {\n\n        setCurrentUser(snapshot.val())\n        console.log(snapshot.val())\n      })\n    }\n  }, [userKey])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/Home\">\n            <Home\n              initUser={initUser}\n              setFirstLogin={setFirstLogin}\n              database={database}\n              isFirstLogin={isFirstLogin}\n              handleLogout={handleLogout}\n              users={users}\n              loggedUser={loggedUser}\n              setUserKey={setUserKey}\n              userKey={userKey}\n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              addPost={addPost}\n              postText={postText}\n              setPostText={setPostText}\n              setImage={setImage}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <RegLog\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              loggedUser={loggedUser}\n              password={password}\n              setPassword={setPassword}\n              handleLogin={handleLogin}\n              handleSignUp={handleSignUp}\n              emailError={emailError}\n              passwordError={passwordError}\n              clearErrors={clearErrors}\n              clearInput={clearInput}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx",["41"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport \"./reg-log.scss\";\r\n\r\n\r\nconst RegLog = (props) => {\r\n\r\n    const [toggler, setToggler] = useState(\"container\");\r\n\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <Redirect to=\"/Home\"></Redirect>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"reg-log\">\r\n                <div className={toggler}>\r\n                    <div className=\"form-container sign-up-container\">\r\n                        <form>\r\n                            <h1>Create New Account</h1>\r\n                            <span>Please, Use a valid E-mail for registration</span>\r\n                            <input\r\n                                onChange={(e) => props.setName(e.target.value)}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={props.name}\r\n                                required\r\n                            />\r\n                            <input\r\n                                onChange={(e) => props.setEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={props.email}\r\n                                required\r\n                            />\r\n                            <p className=\"error\">{props.emailError}</p>\r\n                            <input\r\n                                onChange={(e) => props.setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={props.password}\r\n                            />\r\n                            <p className=\"error\">{props.passwordError}</p>\r\n                            <button onClick={(e) => {\r\n                                e.preventDefault();\r\n                                props.handleSignUp()\r\n                            }}>Sign Up</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"form-container sign-in-container\">\r\n                        <form>\r\n                            <h1>Sign In</h1>\r\n                            <span>Use your Email</span>\r\n                            <input\r\n                                onChange={(e) => props.setEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={props.email}\r\n                                required autoFocus\r\n                            />\r\n                            <p className=\"error\">{props.emailError}</p>\r\n                            <input\r\n                                onChange={(e) => props.setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={props.password}\r\n                            />\r\n                            <p className=\"error\">{props.passwordError}</p>\r\n                            <button onClick={(e) => {\r\n                                e.preventDefault()\r\n                                props.handleLogin()\r\n                            }}>Sign In</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className=\"overlay-container\">\r\n                        <div className=\"overlay\">\r\n                            <div className=\"overlay-panel overlay-left\">\r\n                                <h1>Already Have an Account ?</h1>\r\n                                <p>Sign in now</p>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container\")\r\n                                    }}\r\n                                    className=\"ghost\" id=\"signIn\">Sign In</button>\r\n                            </div>\r\n                            <div className=\"overlay-panel overlay-right\">\r\n                                <h1>Hello Friend !</h1>\r\n                                <p>Sign up and Start the Journey with Us</p>\r\n                                <button onClick={() => {\r\n                                    props.clearErrors()\r\n                                    props.clearInput()\r\n                                    setToggler(\"container right-panel-active\")\r\n                                }} className=\"ghost\" id=\"signUp\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegLog;\r\n\r\n\r\n","J:\\Projects\\React Projects\\social-network\\src\\firebase.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx",["42","43"],"J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":7,"column":3,"nodeType":"50","messageId":"51","endLine":7,"endColumn":11},{"ruleId":"52","severity":1,"message":"53","line":88,"column":9,"nodeType":"54","messageId":"55","endLine":96,"endColumn":10},{"ruleId":"52","severity":1,"message":"53","line":105,"column":9,"nodeType":"54","messageId":"55","endLine":114,"endColumn":10},{"ruleId":"56","severity":1,"message":"57","line":126,"column":6,"nodeType":"58","endLine":126,"endColumn":8,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"60","line":150,"column":6,"nodeType":"58","endLine":150,"endColumn":13,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"62","line":160,"column":6,"nodeType":"58","endLine":160,"endColumn":15,"suggestions":"63"},{"ruleId":"48","severity":1,"message":"64","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"65","line":61,"column":8,"nodeType":"58","endLine":61,"endColumn":15,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":115,"column":41,"nodeType":"69","endLine":115,"endColumn":84},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'database'. Either include them or remove the dependency array.","ArrayExpression",["72"],"React Hook useEffect has missing dependencies: 'database', 'loggedUser.email', 'storage', and 'userKey'. Either include them or remove the dependency array.",["73"],"React Hook useEffect has a missing dependency: 'database'. Either include it or remove the dependency array.",["74"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'gotUser' and 'saveUser'. Either include them or remove the dependency array.",["75"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [authListener, database]",{"range":"84","text":"85"},"Update the dependencies array to be: [database, image, loggedUser.email, storage, userKey]",{"range":"86","text":"87"},"Update the dependencies array to be: [database, userKey]",{"range":"88","text":"89"},"Update the dependencies array to be: [gotUser, props, saveUser]",{"range":"90","text":"91"},[3293,3295],"[authListener, database]",[3872,3879],"[database, image, loggedUser.email, storage, userKey]",[4086,4095],"[database, userKey]",[1648,1655],"[gotUser, props, saveUser]"]