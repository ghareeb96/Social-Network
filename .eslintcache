[{"J:\\Projects\\React Projects\\social-network\\src\\index.js":"1","J:\\Projects\\React Projects\\social-network\\src\\App.js":"2","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js":"3","J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx":"4","J:\\Projects\\React Projects\\social-network\\src\\firebase.js":"5","J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx":"6","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx":"7","J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":5690,"mtime":1613572470032,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5395,"mtime":1613491531727,"results":"13","hashOfConfig":"10"},{"size":561,"mtime":1610613467249,"results":"14","hashOfConfig":"10"},{"size":7019,"mtime":1613528387224,"results":"15","hashOfConfig":"10"},{"size":6149,"mtime":1613491481480,"results":"16","hashOfConfig":"10"},{"size":2212,"mtime":1612752690281,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tg3bt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"J:\\Projects\\React Projects\\social-network\\src\\index.js",[],["38","39"],"J:\\Projects\\React Projects\\social-network\\src\\App.js",["40","41","42","43","44","45"],"J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx",[],"J:\\Projects\\React Projects\\social-network\\src\\firebase.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx",["46"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Posts from '../post/Posts'\r\nimport bg from \"./bg.jpg\"\r\nimport \"./Home.scss\"\r\n\r\nconst Home = (props) => {\r\n    const [gotUser, setGotUser] = useState(false);\r\n\r\n    const editPost = (postId, newPost) => {\r\n        if (newPost.trim()) {\r\n            props.database.child(`users/${props.userKey}/posts/${postId}`).update({\r\n                body: newPost\r\n            })\r\n        } else {\r\n            alert(\"Please, either edit the Post, or delete it .\")\r\n        }\r\n    }\r\n\r\n    const deletePost = (e) => {\r\n        if (window.confirm(\"Are you sure you want to delete this post ?\")) {\r\n            props.database.child(`users/${props.userKey}/posts/${e}`)\r\n                .remove(\r\n                    err => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                        }\r\n                    }\r\n                )\r\n        }\r\n    }\r\n\r\n    const saveUser = () => {\r\n        props.database.child(\"users\").push(props.initUser);\r\n    }\r\n\r\n    const handleUpload = (e) => {\r\n        if (e.target.files[0]) {\r\n            props.setImage(e.target.files[0])\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.isFirstLogin) {\r\n            saveUser();\r\n            props.setFirstLogin(false);\r\n        }\r\n\r\n        if (!gotUser && !props.isFirstLogin) {\r\n            const curUser = () => {\r\n                if (props.users) {\r\n                    for (const [key, value] of Object.entries(props.users)) {\r\n                        if (value.email === props.loggedUser.email) {\r\n                            props.setCurrentUser(value)\r\n                            props.setUserKey(key)\r\n                            setGotUser(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            curUser();\r\n        }\r\n\r\n\r\n    }, [props])\r\n\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <div className=\"home\">\r\n                <img src={bg} alt=\"bg\" className=\"bg\" />\r\n                {props.currentUser ?\r\n                    (<>\r\n                        <div className=\"header\">\r\n                            <div className=\"image-container\">\r\n                                <div className=\"image\">\r\n                                    <img src={props.currentUser.profilePic} alt=\"PP\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"name\">\r\n                                <h1>{props.currentUser.name}</h1>\r\n                                <div className=\"file-input\">\r\n                                    <input type=\"file\" id=\"myfile\" accept=\"image/*\" className=\"myfile\" onChange={handleUpload} />\r\n                                    <label htmlFor=\"myfile\"> <i className=\"fas fa-image\"></i> Change Profile Picture</label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn\">\r\n                                <button onClick={props.handleLogout} className=\"logout\">Sign-Out <i className=\"fas fa-sign-out-alt\"></i>\r\n\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"main\">\r\n                            <div className=\"timeline\">\r\n                                <div className=\"post-input\">\r\n\r\n                                    <div className=\"post-text\">\r\n                                        <textarea\r\n                                            placeholder=\"Post something Useful\"\r\n                                            cols=\"50\"\r\n                                            rows=\"6\"\r\n                                            name=\"newPost\"\r\n                                            value={props.postText}\r\n                                            onChange={(e) => props.setPostText(e.target.value)} />\r\n\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        className=\"add\"\r\n                                        onClick={() => { props.addPost() }}\r\n                                    >\r\n                                        Post</button>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"posts-container\">\r\n\r\n                                    <Posts\r\n                                        posts={props.currentUser.posts}\r\n                                        deletePost={deletePost}\r\n                                        editPost={editPost}\r\n                                        image={props.currentUser.profilePic}\r\n                                        viewIcons={true}\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"users\">\r\n                                <h3>People you may know</h3>\r\n                                {props.users ?\r\n                                    Object.entries(props.users)\r\n                                        .filter((item) => item[1].email !== props.currentUser.email)\r\n                                        .map((item) =>\r\n                                            <div className=\"user\">\r\n                                                <div className=\"image\">\r\n                                                    <img src={item[1].profilePic} alt=\"PP\" />\r\n                                                </div>\r\n                                                <div className=\"userName\">\r\n                                                    <Link to={{\r\n                                                        pathname: `/users/${item[0]}`,\r\n                                                        state: {\r\n                                                            users: props.users,\r\n                                                            mainUser: props.currentUser\r\n                                                        }\r\n                                                    }}\r\n                                                        key={item[0]}>\r\n                                                        {item[1].name}\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    :\r\n                                    \"\"\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    )\r\n                    :\r\n                    \"\"\r\n                }\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        return (\r\n            <Redirect to=\"/Social-Network/\"></Redirect>\r\n        )\r\n    }\r\n}\r\nexport default Home;\r\n\r\n","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx",["47","48","49"],"import React, { useState, useEffect } from 'react'\r\nimport \"./posts.scss\"\r\nimport { gsap, TweenLite } from \"gsap\";\r\n\r\n\r\nconst Posts = (props) => {\r\n    const [posts, setPosts] = useState([])\r\n    const [newText, setNewText] = useState(\"\")\r\n    const [modal, setModal] = useState(false)\r\n    const [firstRender, setFirstRender] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (props.posts) {\r\n            let newPosts = []\r\n            for (const [key, value] of Object.entries(props.posts)) {\r\n                let post = {\r\n                    id: key,\r\n                    body: value.body,\r\n                    date: value.date\r\n                }\r\n                newPosts.push(post)\r\n            }\r\n            newPosts.reverse();\r\n            setPosts(newPosts)\r\n        } else {\r\n            setPosts([])\r\n        }\r\n\r\n    }, [props.posts])\r\n\r\n    useEffect(() => {\r\n        if (posts.length !== 0 && firstRender) {\r\n            TweenLite.fromTo(\".post-container\",\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n            setFirstRender(false)\r\n        } else if (posts.length !== 0 && !firstRender) {\r\n            let selector = document.querySelectorAll(\".post-container\")[0];\r\n            TweenLite.fromTo(selector,\r\n                {\r\n                    css: {\r\n                        opacity: 0,\r\n                        x: 100\r\n                    }\r\n                },\r\n                {\r\n                    css: {\r\n                        opacity: 1,\r\n                        x: 0\r\n                    },\r\n                    duration: 1,\r\n                    yoyo: true,\r\n                    stagger: 0.2\r\n                }\r\n            )\r\n        }\r\n\r\n    }, [posts])\r\n\r\n    useEffect(() => {\r\n\r\n        if (modal) {\r\n\r\n            TweenLite.from(\".modal\", 0.3, {\r\n                scale: 0\r\n            })\r\n        }\r\n\r\n    }, [modal])\r\n\r\n\r\n    return (\r\n        <div className=\"posts\">\r\n\r\n            {posts ?\r\n                (\r\n                    posts.map(item => (\r\n                        <>\r\n                            <div className={modal ? \"modal-container open\" : \"modal-container\"}\r\n\r\n                                onClick={(e) => {\r\n                                    if (e.target.classList.contains(\"modal-container\")) {\r\n                                        setModal(false)\r\n                                    }\r\n                                }}>\r\n\r\n                                <div className=\"modal\">\r\n                                    <div className=\"text\">\r\n                                        <textarea onChange={(e) => setNewText(e.target.value)} cols=\"30\" rows=\"10\" defaultValue={item.body}></textarea>\r\n                                    </div>\r\n                                    <div className=\"btns\">\r\n                                        <button onClick={() => {\r\n                                            props.editPost(item.id, newText)\r\n                                            setModal(false)\r\n                                            setNewText(\"\")\r\n                                        }}>Done</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div\r\n                                className=\"post-container\"\r\n                                key={item.id}\r\n                            >\r\n                                <div className=\"post-image\">\r\n                                    <div className=\"image\">\r\n                                        <img src={props.image} alt=\"Picture\" />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"post\">\r\n                                    <div className=\"post-body\">\r\n                                        <p>{item.body}</p>\r\n                                    </div>\r\n                                    <div className=\"post-footer\">\r\n                                        <div className=\"post-time\"> <p> {item.date}</p></div>\r\n                                        {\r\n                                            props.viewIcons ?\r\n                                                (<div className=\"post-btns\">\r\n\r\n                                                    <button\r\n                                                        className=\"Edit\"\r\n                                                        onClick={() => {\r\n                                                            setModal(true)\r\n                                                        }}\r\n                                                    ><i className=\"far fa-edit\"></i></button>\r\n                                                    <button\r\n                                                        className=\"delete\"\r\n                                                        onClick={() => {\r\n                                                            props.deletePost(item.id)\r\n                                                        }\r\n                                                        }\r\n                                                    ><i className=\"far fa-trash-alt\"></i></button>\r\n\r\n                                                </div>)\r\n                                                :\r\n                                                \"\"\r\n                                        }\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n\r\n                    ))\r\n                )\r\n                :\r\n                (\r\n                    <> </>\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Posts;","J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx",["50","51","52","53"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n    Redirect,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport Posts from '../post/Posts'\r\nimport \"./users.scss\"\r\n\r\nconst Users = (props) => {\r\n    const [user, setUser] = useState(null)\r\n    const [users, setUsers] = useState(null)\r\n    const [goHome, setGoHome] = useState(false)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setUsers(props.location.state.users)\r\n\r\n        Object.entries(props.location.state.users)\r\n            .map((item) => {\r\n                if (item[0] === props.match.params.id) {\r\n                    setUser(item[1])\r\n                }\r\n            })\r\n\r\n    })\r\n\r\n\r\n    if (user) {\r\n        return (\r\n            <div className=\"user\">\r\n\r\n                <div className=\"header\">\r\n                    <div className=\"image-container\">\r\n                        <div className=\"image\">\r\n                            <img src={user.profilePic} alt=\"PP\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"name\">\r\n                        <h1>{user.name}</h1>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <button onClick={() => {\r\n                            setGoHome(true)\r\n                            setUser(null)\r\n                        }}>Home <i className=\"fas fa-home\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <div className=\"timeline\">\r\n                        <div className=\"posts-container\">\r\n                            <Posts\r\n                                posts={user.posts}\r\n                                image={user.profilePic}\r\n                                viewIcons={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    } else {\r\n        if (goHome) {\r\n            return (\r\n                <Redirect to=\"/Home\"></Redirect>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default Users;\r\n\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":11},{"ruleId":"62","severity":1,"message":"63","line":89,"column":9,"nodeType":"64","messageId":"65","endLine":97,"endColumn":10},{"ruleId":"62","severity":1,"message":"63","line":106,"column":9,"nodeType":"64","messageId":"65","endLine":115,"endColumn":10},{"ruleId":"66","severity":1,"message":"67","line":134,"column":6,"nodeType":"68","endLine":134,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":158,"column":6,"nodeType":"68","endLine":158,"endColumn":13,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":168,"column":6,"nodeType":"68","endLine":168,"endColumn":15,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"74","line":69,"column":8,"nodeType":"68","endLine":69,"endColumn":15,"suggestions":"75"},{"ruleId":"58","severity":1,"message":"76","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"77","line":72,"column":8,"nodeType":"68","endLine":72,"endColumn":15,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":122,"column":41,"nodeType":"81","endLine":122,"endColumn":80},{"ruleId":"58","severity":1,"message":"82","line":4,"column":5,"nodeType":"60","messageId":"61","endLine":4,"endColumn":9},{"ruleId":"58","severity":1,"message":"83","line":11,"column":12,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"66","severity":1,"message":"84","line":16,"column":5,"nodeType":"60","endLine":16,"endColumn":14,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":20,"column":25,"nodeType":"88","messageId":"89","endLine":20,"endColumn":27},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'database'. Either include them or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'database', 'loggedUser.email', 'storage', and 'userKey'. Either include them or remove the dependency array.",["93"],"React Hook useEffect has a missing dependency: 'database'. Either include it or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'gotUser' and 'saveUser'. Either include them or remove the dependency array.",["95"],"'gsap' is defined but never used.","React Hook useEffect has a missing dependency: 'firstRender'. Either include it or remove the dependency array.",["96"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'users' is assigned a value but never used.","React Hook useEffect contains a call to 'setUsers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state.users, props.match.params.id] as a second argument to the useEffect Hook.",["97"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [authListener, database]",{"range":"110","text":"111"},"Update the dependencies array to be: [database, image, loggedUser.email, storage, userKey]",{"range":"112","text":"113"},"Update the dependencies array to be: [database, userKey]",{"range":"114","text":"115"},"Update the dependencies array to be: [gotUser, props, saveUser]",{"range":"116","text":"117"},"Update the dependencies array to be: [firstRender, posts]",{"range":"118","text":"119"},"Add dependencies array: [props.location.state.users, props.match.params.id]",{"range":"120","text":"121"},[3443,3445],"[authListener, database]",[4022,4029],"[database, image, loggedUser.email, storage, userKey]",[4236,4245],"[database, userKey]",[1935,1942],"[gotUser, props, saveUser]",[2071,2078],"[firstRender, posts]",[639,639],", [props.location.state.users, props.match.params.id]"]