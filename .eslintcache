[{"J:\\Projects\\React Projects\\social-network\\src\\index.js":"1","J:\\Projects\\React Projects\\social-network\\src\\App.js":"2","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js":"3","J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx":"4","J:\\Projects\\React Projects\\social-network\\src\\firebase.js":"5","J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx":"6","J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx":"7","J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":5571,"mtime":1612738271208,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":4977,"mtime":1612241240952,"results":"13","hashOfConfig":"10"},{"size":561,"mtime":1610613467249,"results":"14","hashOfConfig":"10"},{"size":6919,"mtime":1612757103297,"results":"15","hashOfConfig":"10"},{"size":4489,"mtime":1612756120928,"results":"16","hashOfConfig":"10"},{"size":2212,"mtime":1612752690281,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tg3bt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"J:\\Projects\\React Projects\\social-network\\src\\index.js",[],["37","38"],"J:\\Projects\\React Projects\\social-network\\src\\App.js",["39","40","41","42","43","44"],"import React, { useEffect, useState } from 'react'\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport firebaseDB from \"./firebase\";\nimport RegLog from \"./components/reg-log/reg-log\";\nimport Home from \"./components/Home/Home\";\nimport Users from \"./components/users/users\";\n\nfunction App() {\n  const database = firebaseDB.database().ref();\n  const storage = firebaseDB.storage();\n\n  const [image, setImage] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [initUser, setInitUser] = useState({})\n  const [loggedUser, setloggedUser] = useState('');\n  const [users, setUsers] = useState([]);\n  const [userKey, setUserKey] = useState(\"\");\n  const [isFirstLogin, setFirstLogin] = useState(false)\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [postText, setPostText] = useState(\"\");\n\n\n  const addPost = () => {\n    if (postText.trim() !== \"\") {\n      const date = new Date();\n\n      database.child(`users/${userKey}/posts`).push(\n        {\n          body: postText,\n          date: date.toLocaleString(\"en-US\", {\n            hour: \"numeric\",\n            minute: \"numeric\",\n            weekday: \"short\",\n            day: \"numeric\",\n            month: \"short\",\n            year: \"numeric\"\n          })\n        }\n      )\n      setPostText(\"\")\n\n    }\n  }\n  const authListener = () => {\n    firebaseDB.auth().onAuthStateChanged((user) => {\n      if (user) {\n        clearInput();\n        setloggedUser(user);\n      } else {\n        setloggedUser(\"\");\n      }\n    })\n  }\n  const handleLogout = () => {\n    firebaseDB.auth().signOut();\n    setloggedUser(\"\")\n  }\n  const clearInput = () => {\n    setName(\"\")\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n  const clearErrors = () => {\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  }\n  const handleSignUp = () => {\n    clearErrors();\n    setFirstLogin(true)\n    setInitUser({\n      name: name,\n      email: email,\n      profilePic: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\",\n      posts: {}\n    })\n\n    firebaseDB.auth().createUserWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/email-already-in-use\":\n            setEmailError(err.message);\n            break;\n          case \"auth/weak-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n  }\n  const handleLogin = () => {\n    clearErrors();\n    setFirstLogin(false)\n    firebaseDB.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        switch (err.code) {\n          case \"auth/invalid-email\":\n          case \"auth/user-disabled\":\n          case \"auth/user-not-found\":\n            setEmailError(err.message);\n            break;\n          case \"auth/wrong-password\":\n            setPasswordError(err.message);\n            break;\n        }\n      })\n\n  }\n\n  useEffect(() => {\n    database.child(\"users\").on(\"value\", (snapshot) => {\n      if (snapshot.val() !== null) {\n        setUsers(snapshot.val())\n      }\n    })\n    authListener();\n  }, [])\n\n  useEffect(() => {\n    if (image !== null) {\n\n      const upload = () => {\n        const uploadTask = storage.ref(`images/${loggedUser.email}`).put(image)\n        uploadTask.on(\"state_changed\",\n          snapshot => { },\n          error => console.log(error),\n          () => {\n            storage\n              .ref(\"images\")\n              .child(loggedUser.email)\n              .getDownloadURL()\n              .then(url => {\n                database.child(`users/${userKey}/profilePic`).set(url)\n              })\n          }\n\n        )\n      }\n      upload();\n    }\n  }, [image])\n\n  useEffect(() => {\n    if (userKey) {\n      database.child(`users/${userKey}`).on(\"value\", (snapshot) => {\n\n        setCurrentUser(snapshot.val())\n        console.log(snapshot.val())\n      })\n    }\n  }, [userKey])\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/Home\">\n            <Home\n              initUser={initUser}\n              setFirstLogin={setFirstLogin}\n              database={database}\n              isFirstLogin={isFirstLogin}\n              handleLogout={handleLogout}\n              users={users}\n              loggedUser={loggedUser}\n              setUserKey={setUserKey}\n              userKey={userKey}\n              currentUser={currentUser}\n              setCurrentUser={setCurrentUser}\n              addPost={addPost}\n              postText={postText}\n              setPostText={setPostText}\n              setImage={setImage}\n            />\n          </Route>\n          <Route exact path=\"/\">\n            <RegLog\n              name={name}\n              setName={setName}\n              email={email}\n              setEmail={setEmail}\n              loggedUser={loggedUser}\n              password={password}\n              setPassword={setPassword}\n              handleLogin={handleLogin}\n              handleSignUp={handleSignUp}\n              emailError={emailError}\n              passwordError={passwordError}\n              clearErrors={clearErrors}\n              clearInput={clearInput}\n            />\n          </Route>\n          <Route exact path=\"/users/:id\" component={Users} users={users} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","J:\\Projects\\React Projects\\social-network\\src\\reportWebVitals.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\reg-log\\reg-log.jsx",["45"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport \"./reg-log.scss\";\r\n\r\n\r\nconst RegLog = (props) => {\r\n\r\n    const [toggler, setToggler] = useState(\"container\");\r\n\r\n\r\n    if (props.loggedUser) {\r\n        return (\r\n            <Redirect to=\"/Home\"></Redirect>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"reg-log\">\r\n                <div className={toggler}>\r\n                    <div className=\"form-container sign-up-container\">\r\n                        <form>\r\n                            <h1>Create New Account</h1>\r\n                            <span>Please, Use a valid E-mail for registration</span>\r\n                            <input\r\n                                onChange={(e) => props.setName(e.target.value)}\r\n                                type=\"text\"\r\n                                placeholder=\"Name\"\r\n                                value={props.name}\r\n                                required\r\n                            />\r\n                            <input\r\n                                onChange={(e) => props.setEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={props.email}\r\n                                required\r\n                            />\r\n                            <p className=\"error\">{props.emailError}</p>\r\n                            <input\r\n                                onChange={(e) => props.setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={props.password}\r\n                            />\r\n                            <p className=\"error\">{props.passwordError}</p>\r\n                            <button onClick={(e) => {\r\n                                e.preventDefault();\r\n                                props.handleSignUp()\r\n                            }}>Sign Up</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"form-container sign-in-container\">\r\n                        <form>\r\n                            <h1>Sign In</h1>\r\n                            <span>Use your Email</span>\r\n                            <input\r\n                                onChange={(e) => props.setEmail(e.target.value)}\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={props.email}\r\n                                required autoFocus\r\n                            />\r\n                            <p className=\"error\">{props.emailError}</p>\r\n                            <input\r\n                                onChange={(e) => props.setPassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                                value={props.password}\r\n                            />\r\n                            <p className=\"error\">{props.passwordError}</p>\r\n                            <button onClick={(e) => {\r\n                                e.preventDefault()\r\n                                props.handleLogin()\r\n                            }}>Sign In</button>\r\n                        </form>\r\n\r\n                    </div>\r\n                    <div className=\"overlay-container\">\r\n                        <div className=\"overlay\">\r\n                            <div className=\"overlay-panel overlay-left\">\r\n                                <h1>Already Have an Account ?</h1>\r\n                                <p>Sign in now</p>\r\n                                <button\r\n                                    onClick={() => {\r\n                                        props.clearErrors()\r\n                                        props.clearInput()\r\n                                        setToggler(\"container\")\r\n                                    }}\r\n                                    className=\"ghost\" id=\"signIn\">Sign In</button>\r\n                            </div>\r\n                            <div className=\"overlay-panel overlay-right\">\r\n                                <h1>Hello Friend !</h1>\r\n                                <p>Sign up and Start the Journey with Us</p>\r\n                                <button onClick={() => {\r\n                                    props.clearErrors()\r\n                                    props.clearInput()\r\n                                    setToggler(\"container right-panel-active\")\r\n                                }} className=\"ghost\" id=\"signUp\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div >\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegLog;\r\n\r\n\r\n","J:\\Projects\\React Projects\\social-network\\src\\firebase.js",[],"J:\\Projects\\React Projects\\social-network\\src\\components\\Home\\Home.jsx",["46"],"J:\\Projects\\React Projects\\social-network\\src\\components\\post\\Posts.jsx",["47"],"J:\\Projects\\React Projects\\social-network\\src\\components\\users\\users.jsx",["48","49","50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":7,"column":3,"nodeType":"58","messageId":"59","endLine":7,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":89,"column":9,"nodeType":"62","messageId":"63","endLine":97,"endColumn":10},{"ruleId":"60","severity":1,"message":"61","line":106,"column":9,"nodeType":"62","messageId":"63","endLine":115,"endColumn":10},{"ruleId":"64","severity":1,"message":"65","line":127,"column":6,"nodeType":"66","endLine":127,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":151,"column":6,"nodeType":"66","endLine":151,"endColumn":13,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":161,"column":6,"nodeType":"66","endLine":161,"endColumn":15,"suggestions":"71"},{"ruleId":"56","severity":1,"message":"72","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"64","severity":1,"message":"73","line":68,"column":8,"nodeType":"66","endLine":68,"endColumn":15,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":57,"column":41,"nodeType":"77","endLine":57,"endColumn":80},{"ruleId":"56","severity":1,"message":"78","line":4,"column":5,"nodeType":"58","messageId":"59","endLine":4,"endColumn":9},{"ruleId":"56","severity":1,"message":"79","line":11,"column":12,"nodeType":"58","messageId":"59","endLine":11,"endColumn":17},{"ruleId":"64","severity":1,"message":"80","line":16,"column":5,"nodeType":"58","endLine":16,"endColumn":14,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":20,"column":25,"nodeType":"84","messageId":"85","endLine":20,"endColumn":27},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authListener' and 'database'. Either include them or remove the dependency array.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'database', 'loggedUser.email', 'storage', and 'userKey'. Either include them or remove the dependency array.",["89"],"React Hook useEffect has a missing dependency: 'database'. Either include it or remove the dependency array.",["90"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'gotUser' and 'saveUser'. Either include them or remove the dependency array.",["91"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'users' is assigned a value but never used.","React Hook useEffect contains a call to 'setUsers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.location.state.users, props.match.params.id] as a second argument to the useEffect Hook.",["92"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [authListener, database]",{"range":"103","text":"104"},"Update the dependencies array to be: [database, image, loggedUser.email, storage, userKey]",{"range":"105","text":"106"},"Update the dependencies array to be: [database, userKey]",{"range":"107","text":"108"},"Update the dependencies array to be: [gotUser, props, saveUser]",{"range":"109","text":"110"},"Add dependencies array: [props.location.state.users, props.match.params.id]",{"range":"111","text":"112"},[3339,3341],"[authListener, database]",[3918,3925],"[database, image, loggedUser.email, storage, userKey]",[4132,4141],"[database, userKey]",[1908,1915],"[gotUser, props, saveUser]",[639,639],", [props.location.state.users, props.match.params.id]"]